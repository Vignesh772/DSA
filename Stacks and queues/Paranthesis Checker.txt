// { Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


 // } Driver Code Ends


// Function to return if the paranthesis are balanced or not
bool ispar(string x)
{
    // Your code here
    stack<char> st;
    int i;
    for(i=0;i<x.length();i++)
    {
        if(x[i]=='(' || x[i]=='{' ||  x[i]=='[' ||  x[i]=='(' )
        {
            st.push(x[i]);
        }
        else
        {
            if(st.empty())
            {
                return 0;
            }
            char temp=st.top();
            st.pop();
            if(x[i]=='}'  && temp !='{')
            {
                return 0;
            }
            else if(x[i]==')'  && temp !='(')
            {
                return 0;
            }
            else if(x[i]==']'  && temp !='[')
            {
                return 0;
            }
            
            
        }
    }
    if(!st.empty())
    {
        return 0;
    }
    return 1;
}


// { Driver Code Starts.

int main()
{
   int t;
   string a;
   cin>>t;
   while(t--)
   {
       cin>>a;
       if(ispar(a))
        cout<<"balanced"<<endl;
       else
        cout<<"not balanced"<<endl;
   }
}  // } Driver Code Ends