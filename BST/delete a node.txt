/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        
        
        if(root==NULL)
        {
            return root;
        }
        
        if(root->val >  key)
        
        {
            root->left=deleteNode(root->left,key);
        }
        
        else if(root->val <  key)
        
        {
            root->right=deleteNode(root->right,key);
        }
        
        else if(root->left && root->right){
            
            root->val=findmin(root->right)->val;
            root->right=deleteNode(root->right,root->val);
            
        }
        else
        {
            if(root->left)
            {
                root=root->left;
            }
            else
            {
                root=root->right;
            }
        }
        return root;
        
    }
    
    TreeNode* findmin(TreeNode *root)
    {
        if(root)
        {
            while(root->left)
            {
                root=root->left;
            }
        }
        return root;
    }
};